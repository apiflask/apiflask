name: release
on:
  push:
    branches:
      - main
    tags:
      - '*'
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: Linux, python: '3.12', os: ubuntu-latest, tox: py312}
          - {name: Windows, python: '3.12', os: windows-latest, tox: py312}
          - {name: Mac, python: '3.12', os: macos-latest, tox: py312}
          - {name: '3.11', python: '3.11', os: ubuntu-latest, tox: py311}
          - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}
          - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}
          - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}
          - {name: 'PyPy', python: 'pypy-3.10', os: ubuntu-latest, tox: pypy310}
          - {name: 'Minimum Versions', python: '3.8', os: ubuntu-latest, tox: 'min-versions'}
          - {name: Style, python: '3.10', os: ubuntu-latest, tox: style}
          - {name: Docs, python: '3.10', os: ubuntu-latest, tox: docs}
          - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'requirements/*.txt'
      - name: update pip
        run: |
          pip install -U wheel
          pip install -U setuptools
          python -m pip install -U pip
      - name: cache mypy
        uses: actions/cache@v4.0.0
        with:
          path: ./.mypy_cache
          key: mypy|${{ matrix.python }}|${{ hashFiles('setup.cfg') }}
        if: matrix.tox == 'typing'
      - run: pip install tox
      - run: tox -e ${{ matrix.tox }}
      - name: collect coverage
        run: |
          pip install codecov
          codecov
        if: matrix.name == 'Linux'
  build:
    needs: [tests]
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: requirements*/*.txt
      - run: pip install setuptools wheel
      # Use the commit date instead of the current date during the build.
      - run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - run: python setup.py sdist bdist_wheel
      - uses: actions/upload-artifact@v4
        with:
          path: ./dist
  create-release:
    # Upload the sdist, wheels to a GitHub release. They remain
    # available as build artifacts for a while as well.
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
      - name: create release
        run: >
          gh release create --draft --repo ${{ github.repository }}
          ${{ github.ref_name }}
        env:
          GH_TOKEN: ${{ github.token }}
  publish-pypi:
    needs: [build]
    # Wait for approval before attempting to upload to PyPI. This allows reviewing the
    # files in the draft release.
    environment: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: artifact/
